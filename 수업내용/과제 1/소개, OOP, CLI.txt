1.1 - 2017182042 주상호
1.2 - 1
1.3 - C언어,Visual Studio,3ds max
1.4 - 다른 객체지향 언어를 접해본 적이 없더라도 이 수업을 통해서 객체지향 언어에 대해서 알게 되고 익숙해지고 이해할 수 있으면 좋을 것 같습니다.
2
객체지향(Object Oriented) : 객관적으로 존재하는 실체 위주
클래스 - 표현 대상의 특징에 대한 서술
오브젝트 - 클래스가 실체로 만들어진 것
캡슐화 - '데이터'와 '데이터를 다루는 방법'를 묶는 것
상속성 - 상속 계층을 따라 특성을 공유
다형성 - 다양한 형태에 동일한 명령을 사용
객체지향 프로그래밍(OOP)언어의 특성 1. 캡슐화 2. 상속성 3. 다형성
가장 대표적인 프로그래밍 패러다임 두가지
구조적 프로그래밍 (파스칼, C) / 객체지향 프로그래밍 (자바, C++)
구조적 - 기능적 분할, 절차 중심, 처리 위주(프로세스의 계층에 초점), 데이터가 드러남, 단일성, 1회사용, 순차적인 알고리즘 위주
객체지향 - 객체와 객체간 역할과 관계 중심, 객체중심, 데이터 감추기, 모듈화가 자연스레 달성, 재사용성, 순서없는 메시지 기반
객체지향의 장점 1. 자연스런 모델링 2. 생산성 향상 3. 점진적 개발 4. 견고한 의미적 모델링 5. 명확한 인터페이스 기술 6. 보안 7. 유지보수의 용이성
객체지향 = 사람의 추상능력, 인식방법에 가까운 개발 방법론
슬라이드를 통해서 평소에는 막연히 생각하고 있던 객체지향이라는 개념을 좀 더 구체적으로 이해하게 되었고,
나온 내용들이 제가 실제로 사용하면서 느꼈던 특징들과 어느 정도 맞는지도 생각해보게 되었습니다.
3.1
커맨드 라인 - 텍스트 기반 응용 프로그램으로 파일 보기, 처리, 조작이 가능(커맨드-라인 인터페이스, cmd, CLI, 프롬프트, 콘솔, 터미널 등등 으로도 불림)
window
whoami - 사용자 이름을 스크린에 보여줌
cd - 현재 어느 디렉터리에 있는지 확인
dir - 디렉터리에 어떤 것이 있는지 확인
cd OO - 현재 디렉터리를 OO으로 변경
mkdir OO - 현재 디렉터리에 OO이라는 새 디렉터리 생성
cd.. - 현재 디렉터리에서 상위 디렉터리로 이동
rmdir /S OO - OO디렉터리 삭제
exit - 창을 닫는다
copy - 파일을 복사
move - 파일을 이동
3.2
1 / 과제하면서 Command Line 방식을 처음 사용해보았습니다. cmd창을 켜본적은 있었지만 언제 어떤용도로 쓰이는지 아직 잘 모르겠습니다.