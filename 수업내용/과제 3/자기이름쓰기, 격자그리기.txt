1) <이름쓰기 사진>
여러 작업을 모아서 하나로 처리할 수 있게 해주는 함수의 기능을 적용하였습니다.
2번이상 그려야하는 'ㅅ','ㅇ','ㅜ' 을 그리는 함수를 각각 정의하여서 코드를 작성하였고,
'ㅜ'는 돌려서 사용할 경우 'ㅏ'와'ㅗ'로도 활용이 되어서 함수를 여러번 호출하였습니다. 
2) 파일첨부
3)
프로그래밍에서의 함수
-어떤 특정한 일을 처리하는기능을 모아놓은 것(수학적인 함수도 구현 가능)
-일반적으로 라이브러리, 모듈은 여러 개의 함수들로 구성되어 있다.
-프로그래머는 자기만의 함수를 만들 수 있고, 함수의 이름은 그 함수의 기능을 정확히 나타내는 것이 좋다.
함수의 정의 - 함수이름, 매개변수, 함수가 호출되었을 때 수행할 문장들을 가지고 함수를 만들 수 있다.
함수를 실행하려면 먼저 함수를 정의한 후에 그 함수를 호출하면 실행이 된다. 정의한 것 만으로는 실행되지 않는다.
함수는 여러 작업을 모아서 하나로 처리, 여러 개의 return 값, 인자의 타입에 따라 자동으로 연산 기능이 결정 등등의 기능이 있다.
4)
재귀 호출(recursive call)이란 함수 내부에서 함수가 자기 자신을 또다시 호출하는 것을 말한다.
따라서 종료 조건이 없을 경우 무한히 호출이 반복되므로 함수 내에 재귀 호출을 중단하도록 하는 조건을 포함해야 한다.
반복문을 통해 구현 가능한 것은 재귀 함수 호출을 통해서도 구현이 가능하고, 그 반대로도 가능하다.
이러한 호출을 사용하는 이유는 복잡한 알고리즘을 구현할 때, 반복문으로 구현된 코드보다 재귀 호출로 구현된 코드가
더 단순하고 이해하기 쉽게 표현이 가능하기 때문이다.
예시)  
def fib(n):
     if n < 2:
        return n
     return fib(n-1) + fib(n-2)
python에서 피보나치 수열의 n번째 값을 구하는 함수에 재귀 호출을 활용해 보았다
5)
프랙탈 그래픽은 처음의 모양이 반복적으로 축소되면서 나타나는 모습을 프랙탈의 속성을 이용하여 그래픽으로 나타낸 것을 말한다.
프랙탈이란 작은 구조가 전체 구조와 비슷한 형태로 끝없이 되풀이 되는 구조를 말한다.
프랙탈의 기본 속성은 자기유사성(부분과 전체가 똑같은 모양)과 순환성(무한히 반복)으로,
프로그래밍에서는 함수의 재귀호출을 이용하여 프랙탈의 순환성을 구현할 수 있다.
<fractal tree사진> <fractal curve사진>
turtle graphics 를 이용해서 이러한 fractal graphic 들을 구현할 수 있다.